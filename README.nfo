_______________________________________________________________________________
|                                                                             |
|  ▓█████▄  █    ██   ██████ ▄▄▄█████▓  ██▓     ▒█████   ███▄    █ ▓█████▄    |
|  ▒██▀ ██▌ ██  ▓██▒▒██    ▒ ▓  ██▒ ▓▒ ▓██▒    ▒██▒  ██▒ ██ ▀█   █ ▒██▀ ██▌   |
|  ░██   █▌▓██  ▒██░░ ▓██▄   ▒ ▓██░ ▒░ ▒██░    ▒███████▒▓██  ▀█ ██▒░██   █▌   |
|  ░▓█▄   ▌▓▓█  ░██░  ▒   ██▒░ ▓██▓ ░  ▒██░    ▒██   ██░▓██▒  ▐▌██▒░▓█▄   ▌   |
|  ░▒████▓ ▒▒█████▓ ▒██████▒▒  ▒██▒ ░  ░██████▒░ █    ▓▒░▒██░   ▓██░░▒████▓    |
|   ▒▒▓  ▒ ░▒▓▒ ▒ ▒ ▒ ▒▓▒ ▒ ░  ▒ ░░    ░ ▒░▓  ░░ ▒░ ░▒░ ░ ▒░   ▒ ▒  ▒▒▓  ▒    |
|   ░ ▒  ▒ ░░▒░ ░ ░ ░ ░▒  ░ ░    ░     ░ ░ ▒  ░  ░   ▒░ ░ ░░   ░ ▒░ ░ ▒  ▒    |
|   ░ ░  ░  ░░░ ░ ░ ░  ░  ░    ░         ░ ░   ░ ░   ▒     ░   ░ ░  ░ ░  ░    |
|     ░       ░           ░                ░  ░      ░           ░    ░       |
|                           D U S T L A N D   C R T                           |
|                      Wasteland-style browser RPG (WIP)                      |
|                               v0.6.7 .NFO                                   |
|_____________________________________________________________________________|

[ ABOUT ]
  Dustland CRT is a work-in-progress browser RPG with a crunchy CRT vibe,
  branching dialog, party stats, inventory, quests, and a world+hall demo.
  The repo now ships with an Adventure Construction Kit (ACK) and a tiny
  module player so you can craft and try your own wasteland tales. It’s
  still built to be easy to run and easy to hack. Tiny inline SFX add a bit of
  snap without requiring extra assets.

[ HOW TO RUN ]
  - Play the latest build in your browser:
    https://weatheredclown.github.io/dustland/dustland.html
  - Just open:  dustland.html  (double-click or serve from any static server).
  - Pick a module on startup (e.g. Dustland or Echoes).
  - Build a module with: adventure-kit.html  (save to JSON).
  - Play a module with: ack-player.html (fetch a module URL, load a local JSON, or pass ?module=URL to auto-load; defaults to modules/golden.module.json).
  - No build step. No dependencies. Works offline.
  - Tip: Use a modern Chromium, Firefox, or Safari.

[ CONTROLS ]
  Movement .......... WASD / Arrow Keys
  Interact .......... E / Space  (talk, doors, take nearby item)
  Take Item ......... T          (take from your tile or adjacent tiles)
  Inventory ......... I
  Party ............. P          (radio button selects the acting member)
  Quests ............ Q
  Save / Load ....... G / L      (or UI buttons)
  Minimap ........... M
  Close Dialog ...... Esc

[ KEY MECHANICS ]
  - You cannot stand on NPCs (!) or items; they block movement.
  - Picking up: stand next to or on your tile and press E/Space or T.
  - The selected party member (radio in Party tab) makes skill rolls and
    receives XP for dialog checks and quest rewards.
  - World buildings appear as black structures; their doors lead to
    simple interiors you can enter directly from the overworld.
  - Water is bright blue and is not walkable; items won’t spawn in water.
  - Walking gradually restores HP for the selected party member.

[ CHARACTER CREATION ]
  - Start a new game at boot if no save is present.
  - Create 1–3 drifters (funny quirks, specializations, secret origins).
  - You’re NOT forced to fill all three slots—“Start Now” begins immediately.
  - You can also hit “Load Game” directly from creator.

[ SAVE DATA ]
  - Saved to localStorage under key: dustland_crt
  - “Reset” clears party/inventory and returns you to Creator.
  - To fully wipe: clear the site’s localStorage from your browser.

[ PROJECT LAYOUT ]
  - dustland.html
    * Entry point wiring up the canvas, UI, and scripts.
  - dustland-core.js
    * Game state, dialog system, inventory & equipment.
  - core/quests.js
    * Quest system and logging.
  - core/npc.js
    * NPC utilities and dialog helpers.
  - dustland-engine.js
    * Renderer, input handling, HUD, and tiny sfx.
  - modules/dustland.module.js
    * NPCs, items, world data, and quests for the core adventure.
  - modules/golden.module.json
    * Sample module showcasing a fetch quest, stat gate, joinable NPC, timed spawn, event toasts, portal, chest loot drop, healing potion, and combat; default module for ACK player.
  - adventure-kit.html / adventure-kit.js
    * Map/NPC/item/quest editor for making modules. Includes palette-based
      interior and building editors with customizable door placement.
  - ack-player.html / ack-player.js
    * Fetch a module JSON from the web or load a local file into the engine.
  - dustland-nano.js
    * Micro helper utilities.
  - dustland.css
    * CRT styling and layout.
  - No external assets or libraries.

[ KNOWN GOOD BEHAVIOR (v0.6.7) ]
  - Stable boot: hall always renders before any modal (no blank canvas).
  - Items/NPCs draw before player (no sprite pop-under).
  - Loot from chests spawns on a nearby free tile (never under the player).
  - World building doors lead to interiors; hall top door exits to world.
  - “Selected” party member determines rolls & takes XP.

[ TROUBLESHOOTING ]
  - Black screen on load?
      * Hard refresh (Ctrl+F5 / Cmd+Shift+R).
      * Check console for errors.
      * If a corrupted save exists, click “Reset” or clear localStorage.
  - Can’t pick up items?
      * Press E/Space or T while standing next to (or on) the item tile.
  - Rolls/XP going to the wrong member?
      * Open Party tab and switch the Selected radio—this member becomes
        the leader for checks and XP.

[ HACKING NOTES ]
  - Plain JS scripts with globals; no build step or framework.
  - Gameplay logic is split into tiny systems: movement, collisions,
    interactions, and rendering order. This keeps cross-file conditionals
    low and makes adding new entities like bandits or doors easy.
  - Useful entry points:
      * genHall(), genWorld(), seedWorldContent()
      * makeNPC(), NPCS[], quests{}, itemDrops[]
      * renderParty(), renderInv(), renderQuests()
      * takeNearestItem(), interact(), move()
      * applyModule(data), openCreator()
      * uncurseItem(id)
  - NPC trees can be functions for dynamic dialog.
  - Items support `equip.flag` and `unequip` teleport/message effects.
  - Tiles: see TILE enum + colors[] + walkable[].
  - Tests: run `npm install` to fetch dev deps like jsdom, then `npm test` for basic checks.
    The main game still runs from the repo download alone.

[ LICENSE ]
  MIT License

  Copyright (c) 2024 Dustland Contributors

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in all
  copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  SOFTWARE.

[ CREDITS ]
  - Design & code: you + contributors.
  - ASCII/NFO: generated in classic BBS spirit.
  - Inspirations: Wasteland (DOS), Planescape-like dialog energy, 90s P&P.

[ CONTACT ]
  - GitHub issues preferred. Paste console logs & steps to reproduce.
  - Include browser/version and whether a save existed when it happened.

[ GREETS ]
  - To all the wasteland drifters, ANSI pirates, and CRT enjoyers. o7
_______________________________________________________________________________
